package org.utnrepasa.net.principal;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.utnrepasa.net.util.Game;
import org.utnrepasa.net.util.MultiplayerGame;
import org.utnrepasa.net.util.Player;
import org.utnrepasa.net.util.User;

/**
 *
 * @author Gochi
 */
public class VentanaListaPartidas extends javax.swing.JFrame {

    private static VentanaListaPartidas yo;
    private DefaultListModel modeloPartidasEnJuego, modeloPartidasFinalizadas, modeloPartidasInvitadas, modeloPartidasCreadas;

    private VentanaListaPartidas() {
        initComponents();
        modeloPartidasEnJuego = new DefaultListModel();
        modeloPartidasFinalizadas = new DefaultListModel();
        modeloPartidasInvitadas = new DefaultListModel();
        modeloPartidasCreadas = new DefaultListModel();
    }

    public static VentanaListaPartidas getInstancia() {
        if (yo == null) {
            yo = new VentanaListaPartidas();
        }
        return yo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPartidasEnJuego = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstInvitaciones = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstCreadas = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstFinalizadas = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        btnCrearPartida = new javax.swing.JButton();
        btnAceptarInvitacion = new javax.swing.JButton();
        btnJugar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Partidas");

        lstPartidasEnJuego.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPartidasEnJuego.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPartidasEnJuegoValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPartidasEnJuego);

        jLabel2.setText("En juego");

        lstInvitaciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstInvitaciones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstInvitacionesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstInvitaciones);

        jLabel3.setText("Invitaciones");

        jLabel4.setText("Creadas");

        lstCreadas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(lstCreadas);

        lstFinalizadas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(lstFinalizadas);

        jLabel5.setText("Finalizadas");

        btnCrearPartida.setText("Crear partida");
        btnCrearPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPartidaActionPerformed(evt);
            }
        });

        btnAceptarInvitacion.setText("Aceptar invitaci√≥n");
        btnAceptarInvitacion.setEnabled(false);
        btnAceptarInvitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarInvitacionActionPerformed(evt);
            }
        });

        btnJugar.setText("Jugar");
        btnJugar.setEnabled(false);
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnJugar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAceptarInvitacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCrearPartida)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearPartida)
                    .addComponent(btnAceptarInvitacion)
                    .addComponent(btnJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPartidaActionPerformed
        ControladorCliente controlador = ControladorCliente.getInstancia();
        controlador.abrirVentanaCrearPartida();
    }//GEN-LAST:event_btnCrearPartidaActionPerformed

    private void lstInvitacionesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstInvitacionesValueChanged
        int indice = lstInvitaciones.getSelectedIndex();
        if (indice != -1) {
            btnAceptarInvitacion.setEnabled(true);
        }
    }//GEN-LAST:event_lstInvitacionesValueChanged

    private void btnAceptarInvitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarInvitacionActionPerformed
        int indice = lstInvitaciones.getSelectedIndex();
        if (indice != -1) {
            MultiplayerGame mg = (MultiplayerGame) modeloPartidasInvitadas.getElementAt(indice);
            int id = mg.getId();
            ControladorCliente.getInstancia().aceptarInvitaci√≥n(id);
        }
    }//GEN-LAST:event_btnAceptarInvitacionActionPerformed

    private void lstPartidasEnJuegoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPartidasEnJuegoValueChanged
        int indice = lstPartidasEnJuego.getSelectedIndex();
        if (indice != -1) {
            btnJugar.setEnabled(true);
        }
    }//GEN-LAST:event_lstPartidasEnJuegoValueChanged

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        int indice = lstPartidasEnJuego.getSelectedIndex();
        if (indice != -1) {
            ControladorCliente controlador = ControladorCliente.getInstancia();
            User yo = controlador.getUsuario();
            MultiplayerGame partida = (MultiplayerGame) modeloPartidasEnJuego.getElementAt(indice);
            Player jugador = partida.getPlayers().get(partida.getTurn());
            if (jugador.equals(yo)) {
                controlador.solicitarPreguntas(partida.getId());
            }else{
                JOptionPane.showMessageDialog(this, "No es tu turno");
            }
        }
    }//GEN-LAST:event_btnJugarActionPerformed

    public void recibirPartidasEnJuego(ArrayList<MultiplayerGame> partidasEnJuego) {
        System.out.println("CANTIDAD : " + partidasEnJuego.size());
        modeloPartidasCreadas.clear();
        modeloPartidasEnJuego.clear();
        modeloPartidasFinalizadas.clear();
        modeloPartidasInvitadas.clear();
        ControladorCliente controlador = ControladorCliente.getInstancia();
        User yo = controlador.getUsuario();
        for (MultiplayerGame partida : partidasEnJuego) {
            if (partida.getState() == Game.STATE.STARTED) {
                Player jugador = partida.getPlayers().get(partida.getTurn());
                if (jugador.equals(yo)) {
                    modeloPartidasEnJuego.addElement(partida);
                    System.out.println("ES MI TURNO");
                } else {
                    modeloPartidasEnJuego.addElement(partida);
                    System.out.println("NO ES MI TURNO");
                }
            } else if (partida.getState() == Game.STATE.FINALIZED) {
                modeloPartidasFinalizadas.addElement(partida);
            } else if (partida.getState() == Game.STATE.WAITING) {
                if (partida.getCreator().equals(yo)) {
                    modeloPartidasCreadas.addElement(partida);
                } else {
                    modeloPartidasInvitadas.addElement(partida);
                }
            }
        }
        lstPartidasEnJuego.setModel(modeloPartidasEnJuego);
        lstFinalizadas.setModel(modeloPartidasFinalizadas);
        lstInvitaciones.setModel(modeloPartidasInvitadas);
        lstCreadas.setModel(modeloPartidasCreadas);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarInvitacion;
    private javax.swing.JButton btnCrearPartida;
    private javax.swing.JButton btnJugar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList lstCreadas;
    private javax.swing.JList lstFinalizadas;
    private javax.swing.JList lstInvitaciones;
    private javax.swing.JList lstPartidasEnJuego;
    // End of variables declaration//GEN-END:variables
}
